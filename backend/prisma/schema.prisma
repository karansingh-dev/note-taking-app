generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  email
  google
}

model User {
  id             String    @id @default(uuid()) @db.Uuid
  name           String    @db.VarChar(50)
  email          String    @unique @db.VarChar(255)
  dob            DateTime?
  profilePicture String?   @map("profile_picture") @db.VarChar(255)

  // OTP Authentication fields
  verifyCode          String?   @map("verify_code") @db.VarChar(6)
  verifyCodeExpiresAt DateTime? @map("verify_code_expires_at")
  isRegistered        Boolean   @map("is_registered")

  // OAuth fields 
  googleId     String?      @unique @map("google_id") @db.VarChar(255)
  authProvider AuthProvider @map("auth_provider")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  notes Note[]

  @@map("users")
}

model Note {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  title       String   @db.VarChar(255)
  description String?   @db.Text
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("notes")
}
